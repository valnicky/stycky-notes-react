{"version":3,"sources":["components/Note.js","components/Board.js","components/Checkbox.js","App.js","reportWebVitals.js","index.js"],"names":["Note","useState","setEditing","setDeleting","inputRef","useRef","editing","save","current","value","RenderDisplay","className","onClick","e","RenderForm","ref","type","Board","props","update","newNote","id","notes","state","map","note","setState","remove","filter","eachNote","onChange","onRemove","this","React","Component","Checkbox","onChangeHandle","checked","msg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0VA0DeA,MApDf,WACG,MAA2BC,oBAAS,GAApC,mBAAaC,GAAb,WACA,EAA2BD,oBAAS,GAApC,mBAAYE,GAAZ,WACOC,EAAWC,mBAEdC,EAAU,WAGVJ,GAAW,IAQTK,EAAO,WACEH,EAASI,QAAQC,MAE3BP,GAAW,IAKZQ,EAAgB,WACd,OACI,sBAAKC,UAAU,OAAf,UACI,sBACA,iCACI,wBAAQC,QAAS,SAACC,GAAD,OAAQP,KAAzB,kBACA,wBAAQM,QAAS,SAACC,GAlB/BV,GAAY,IAkBC,sBAMfW,EAAc,WACZ,OACI,sBAAKH,UAAU,OAAf,UACI,0BAAUI,IAAKX,IACf,wBAAQY,KAAK,GAAGJ,QAASL,EAAzB,sBAKZ,OAAGD,EACiB,cAACQ,EAAD,IAED,cAACJ,EAAD,KCGRO,G,yDApDX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAYTC,OAAS,SAACC,EAASC,GACjB,IAAIC,EAAQ,EAAKC,MAAMD,MAAME,KACzB,SAAAC,GAAI,OAAKA,EAAKJ,KAAOA,EACjBI,EADI,YAAC,eAGEA,GAHH,IAIAA,KAAML,OAGlB,EAAKM,SAAS,CAACJ,WAtBA,EAyBlBK,OAAS,SAACN,GACN,IAAIC,EAAQ,EAAKC,MAAMD,MAAMM,QAAO,SAACH,GAAD,OAChCA,EAAKJ,KAAOA,KACb,EAAKK,SAAS,CAACJ,WA5BJ,EAgClBO,SAAW,SAACJ,GACR,OACI,cAAC,EAAD,CAAoBJ,GAAII,EAAKJ,GACrBS,SAAY,EAAKX,OACjBY,SAAY,EAAKJ,OAFzB,SAEkCF,EAAKA,MAF5BA,EAAKJ,KAhCpB,EAAKE,MAAQ,CACTD,MAAO,CACL,CAACD,GAAG,EAAGI,KAAM,WACb,CAACJ,GAAG,EAAGI,KAAM,qBACb,CAACJ,GAAI,EAAGI,KAAM,cACd,CAACJ,GAAI,EAAGI,KAAM,oBACd,CAACJ,GAAI,EAAII,KAAM,sBARP,E,0CAwClB,WACQ,OACJ,qBAAKd,UAAU,QAAf,SACKqB,KAAKT,MAAMD,MAAME,IACdQ,KAAKH,gB,GA7CAI,IAAMC,YCiCZC,E,kDAjCX,WAAYjB,GAAO,IAAD,8BACd,cAAMA,IAOdkB,eAAkB,WACb,EAAKV,SAAS,CAACW,SAAU,EAAKd,MAAMc,WAPjC,EAAKd,MAAQ,CACTc,SAAS,GAHC,E,0CAcf,WACO,IAAIC,EAQJ,OAPGN,KAAKT,MAAMc,SACZC,EAAM,UACNN,KAAKT,MAAMc,SAAU,IAEpBC,EAAM,YACPN,KAAKT,MAAMc,SAAU,GAGrB,gCACI,uBAAOrB,KAAK,WAAYc,SAAUE,KAAKI,iBACvC,4CAAeE,Y,GA3BZL,IAAMC,WCYdK,MATf,WACE,OACE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCES6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a63ecb57.chunk.js","sourcesContent":["\r\nimport { render } from '@testing-library/react';\r\nimport React, {useState, useRef} from 'react';\r\nimport '../Note.css';\r\nimport './Board';\r\n\r\nfunction Note () {\r\n   const [edit, setEditing] = useState(false);\r\n   const [del, setDeleting] = useState(false);\r\n   const  inputRef = useRef();\r\n    \r\nconst  editing = () => {\r\n      //  alert('Editing');\r\n      //  console.log('editing');\r\n       setEditing(true);\r\n    }\r\n    \r\nconst  deleting = () => {\r\n        setDeleting(true);\r\n   //this.setState({deleting: true})\r\n    }\r\n    \r\nconst    save = () => {\r\n        var val = inputRef.current.value;\r\n       // alert('val: ' + val);\r\n        setEditing(false);\r\n     // this.setState({editing: false})\r\n       // this.props.onChange(this.refs.inputRef.value, this.id);\r\n    }\r\n    \r\nconst  RenderDisplay = () => {\r\n         return (\r\n             <div className=\"note\">\r\n                 <p>{}</p>\r\n                 <span>\r\n                     <button onClick={(e) => (editing(e))}>Edit</button>\r\n                     <button onClick={(e) => (deleting(e))}>X</button>\r\n                </span>\r\n             </div>\r\n        )\r\n    }\r\n    \r\nconst RenderForm  = () => {\r\n        return(\r\n            <div className=\"note\">\r\n                <textarea ref={inputRef}></textarea>\r\n                <button type=\"\" onClick={save}>Save</button>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    if(editing){\r\n                 return <RenderForm/>\r\n    } else {\r\n                return <RenderDisplay/>\r\n      }\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\nimport Note from \"./Note\";\r\nimport \"../Board.css\";\r\n\r\nclass  Board extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            notes: [\r\n              {id:0, note: 'Running'},\r\n              {id:1, note: 'Cook an apple pie'},\r\n              {id: 2, note: 'Learn Gulp'},\r\n              {id: 3, note: 'Listen Ivoox mp3'},\r\n              {id: 4,  note: 'Practice english'}\r\n            ]\r\n        }   \r\n    }\r\n    \r\n     update = (newNote, id) => {\r\n       var notes = this.state.notes.map(\r\n           note => (note.id !== id) ?\r\n               note: \r\n               {\r\n                   ...note,\r\n                   note: newNote\r\n               }\r\n           )\r\n       this.setState({notes});\r\n    }\r\n    \r\n    remove = (id) => {\r\n        var notes = this.state.notes.filter((note) => \r\n            note.id !== id) \r\n           this.setState({notes});     \r\n        }\r\n    \r\n    \r\n    eachNote = (note) => {\r\n        return (\r\n            <Note key={note.id} id={note.id}\r\n                    onChange = {this.update}\r\n                    onRemove = {this.remove}>{note.note}</Note>\r\n        )\r\n    }\r\n    \r\n    render(){\r\n            return (\r\n        <div className=\"board\">\r\n            {this.state.notes.map(\r\n                this.eachNote\r\n            )}\r\n        </div>\r\n    )\r\n    }\r\n\r\n}\r\n\r\nexport default Board\r\n","import { render } from '@testing-library/react';\r\nimport React, {useState} from 'react'\r\n\r\nclass Checkbox extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            checked: false\r\n        }\r\n    }\r\n //   const [checked, setCheck] = useState(false);\r\n    \r\nonChangeHandle =  () => {\r\n     this.setState({checked: !this.state.checked});\r\n    // console.log(this.state.checked);\r\n\r\n   }\r\n  \r\n       render(){\r\n              var msg;\r\n              if(this.state.checked) {\r\n                msg = 'checked';\r\n                this.state.checked = true;\r\n             } else {\r\n                 msg = 'unchecked';\r\n                this.state.checked = false;\r\n            }\r\n              return (\r\n                <div>\r\n                    <input type=\"checkbox\"  onChange={this.onChangeHandle} />\r\n                    <p>the box is {msg}</p>\r\n                </div>\r\n            )\r\n       }\r\n \r\n}\r\n\r\nexport default Checkbox\r\n","import React from \"react\";\nimport './App.css';\nimport Board from \"./components/Board\";\nimport Checkbox from './components/Checkbox';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board/>\n      <Checkbox/>\n     </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}